[user]
  name = Andrew Cates
[core]
  excludesfile = /Users/catesandrew/.gitignore
  quotepath = false
[git-p4]
  user = catesandrew
  useclientspec = true
[alias]
  # https://git.wiki.kernel.org/articles/a/l/i/Aliases.html
  fp = format-patch --stdout -1
  idiff = "!git diff | idiff"
  vdiff = difftool
  qlog = log --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%Creset %s %C(bold yellow)<%an>%Creset'
  st = status
  co = checkout
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
  # Quickly Commit / Uncommit Work-In-Progress
  # By David Gageot (http://gist.github.com/492227): 
  wip = "git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"wip\""
  unwip = "git log -n 1 | grep -q -c wip && git reset HEAD~1"
  #hdiff = "git diff --color-words --no-index orig.txt edited.txt | /tmp/ansi2html.sh > 2beshared.html"

  # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
  # `git gc`: cleanup unnecessary files and optimize the local repository
  # `git clean -df`: remove untracked files and directories from the working tree
  # `git stash clear`: remove all stashed states
  trim = !git remote prune origin && git gc
  cleanup = !git clean -df && git stash clear

  # Add untracked, remove deleted, and show status
  adda = !git add -A && git status

  # Fetch a repository ($1) and checkout its ref ($2) HEAD
  # Use: `git browse https://github.com/necolas/dotfiles <commit-ish>`
  browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -

  # Diff what is staged for the next commit
  diffc = diff --cached
  # Diff overview
  diffst = diff --stat

  # Custom graph log (append any tree-ish)
  graph = log --pretty=nice --date-order --graph
  # Custom graph log for all branches
  grapha = log --pretty=nice --date-order --graph --all

  # Custom pretty log
  logp = log --pretty=nice --date-order

  # Diffstat log
  logst = log --stat
  # Short format diffstat log
  logsf = log --stat --format=oneline --abbrev-commit

  # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
  # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
  gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

  # Find out who is currently active on the repository
  # Displays committers in descending order of number of commits
  who = shortlog --numbered --summary --email --no-merges --since="3 months"
[branch]
  autosetupmerge = true  
[difftool "Kaleidoscope"]
  cmd = ksdiff-wrapper git \"$LOCAL\" \"$REMOTE\"
[difftool]
  prompt = false
[diff]
  tool = araxis
[merge]
  tool = araxis
[diffall]
  external = araxisgitdiffall
[color]
  diff = auto
  status = auto
  branch = auto
  sh = auto
  #ui = true
[color "branch"]
  current = yellow reverse
  local = yellow 
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[color "sh"]
  branch = yellow reverse
  workdir = blue bold
  dirty = red
[pretty]
  # tut: http://gitimmersion.com/lab_10.html
  # ref: http://linux.die.net/man/1/git-log
  # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
  nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
