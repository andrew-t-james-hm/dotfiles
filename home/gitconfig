[user]
  name = Andrew Cates
  email = catesandrew@gmail.com
[core]
  excludesfile = ~/.gitignore
  quotepath = false
  trustctime = false
  autocrlf = input
[git-p4]
  user = andrew
  useclientspec = true
[alias]
  pu = !"git fetch origin -v; git fetch upstream -v; git merge upstream/develop"
  fp = format-patch --stdout -1
  idiff = "!git diff | idiff"
  qlog = log --abbrev-commit --date=relative --pretty=format:'%C(bold yellow)%h%Creset %s %C(bold yellow)<%an>%Creset'
  # Short status output
  st = "!git status -sb"
  co = checkout
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
  # Quickly Commit / Uncommit Work-In-Progress
  # By David Gageot (http://gist.github.com/492227):
  wip = "git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"wip\""
  unwip = "git log -n 1 | grep -q -c wip && git reset HEAD~1"
  nr = "!git ls-files -o --exclude-standard | xargs rm"
  # number of commits on branch.
  # 1 rev-list lists revisions, and
  # 2 master.. refers to "commits since current HEAD diverged from master"
  count = "!git rev-list develop.. | wc -l"
  #
  # Show branches, tags in git log
  dlog = "!git log --oneline --decorate"
  # Diff by highlighting inline word changes instead of whole lines
  wdiff = "!git diff --word-diff"

  # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
  # `git gc`: cleanup unnecessary files and optimize the local repository
  # `git clean -df`: remove untracked files and directories from the working tree
  # `git stash clear`: remove all stashed states
  trim = !git remote prune origin && git gc
  cleanup = !git clean -df && git stash clear

  # Add untracked, remove deleted, and show status
  adda = !git add -A && git status

  # Fetch a repository ($1) and checkout its ref ($2) HEAD
  # Use: `git browse https://github.com/necolas/dotfiles <commit-ish>`
  browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -

  # Diff what is staged for the next commit
  diffc = diff --cached
  # Diff overview
  diffst = diff --stat

  # Custom graph log (append any tree-ish)
  graph = log --pretty=nice --date-order --graph
  # Custom graph log for all branches
  grapha = log --pretty=nice --date-order --graph --all

  # Custom pretty log
  logp = log --pretty=nice --date-order

  # Diffstat log
  logst = log --stat
  # Short format diffstat log
  logsf = log --stat --format=oneline --abbrev-commit

  # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
  # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
  gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

  # Find out who is currently active on the repository
  # Displays committers in descending order of number of commits
  who = shortlog --numbered --summary --email --no-merges --since="3 months"

  # Divergence (commits we added and commits remote added)
  div = divergence

  # Goodness (summary of diff lines added/removed/total)
  gn = goodness
  gnc = goodness --cached

  # Fancy logging.
  #   h = head
  #   hp = head with patch
  #   r = recent commits, only current branch
  #   ra = recent commits, all reachable refs
  #   l = all commits, only current branch
  #   la = all commits, all reachable refs
  head = !git r -1
  h = !git head
  hp = "!. ~/.githelpers && show_git_head"
  r = !GIT_NO_PAGER=1 git l -30
  ra = !git r --all
  l = "!. ~/.githelpers && pretty_git_log"
  la = !git l --all
[branch]
  autosetupmerge = true
  autosetuprebase = always
[difftool]
  prompt = false
[diff]
  tool = araxis
  renamelimit = 3000
[mergetool "araxis"]
  path = /Applications/Araxis Merge.app/Contents/Utilities/compare
[color]
  diff = auto
  status = auto
  branch = auto
  sh = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[color "sh"]
  branch = yellow reverse
  workdir = blue bold
  dirty = red
[web]
  browser = open
[push]
  default = tracking
[branch "master"]
  rebase = true
[mergetool]
  keepBackup = true
