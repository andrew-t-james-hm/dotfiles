const testFilePattern = /lib\/__tests__/;

module.exports = {
  environments: ({ pathToCurrentFile }) => {
    if (testFilePattern.test(pathToCurrentFile)) {
      return [
        'qunit',
        'jasmine',
        'jest',
        'node',
        'mocha',
      ];
    }
    return [
      'es2017',
      'node',
      'browser',
      'worker',
      'serviceworker',
      'webextensions',
      'devtools',
    ];
  },
  declarationKeyword: 'import',
  logLevel: 'debug',
  excludes: [
    './build/**',
    './lib/__mocks__/**',
    './react-components/**/test/**',
  ],
  importDevDependencies: ({ pathToCurrentFile }) =>
    testFilePattern.test(pathToCurrentFile),
  aliases: {
    $: 'jquery',
    _: 'lodash',
    styles: './{filename}.css',
    css: 'css-template',
    MediaQuery: 'react-responsive'
  },
  ignorePackagePrefixes: [
    'eslint-',
    'wb-',
    'waybetter-',
  ],
  namedExports: {
    'reselect': [
      'createSelector',
      'createStructuredSelector'
    ],
    'recompose': [
      'compose',
      'mapProps',
      'withProps',
      'withPropsOnChange',
      'withHandlers',
      'defaultProps',
      'renameProp',
      'renameProps',
      'flattenProp',
      'withState',
      'withStateHandlers',
      'withReducer',
      'branch',
      'renderComponent',
      'renderNothing',
      'shouldUpdate',
      'pure',
      'onlyUpdateForKeys',
      'onlyUpdateForPropTypes',
      'withContext',
      'getContext',
      'lifecycle',
      'toClass',
      'setStatic',
      'setPropTypes',
      'setDisplayName',
      'compose',
      'getDisplayName',
      'wrapDisplayName',
      'shallowEqual',
      'isClassComponent',
      'createSink',
      'componentFromProp',
      'nest',
      'hoistStatics',
      'componentFromStream',
      'componentFromStreamWithConfig',
      'mapPropsStream',
      'mapPropsStreamWithConfig',
      'createEventHandler',
      'createEventHandlerWithConfig',
      'setObservableConfig'
    ],
    'lodash/fp': [
      'F',
      'T',
      '__',
      '_baseConvert',
      '_convertBrowser',
      '_falseOptions',
      '_mapping',
      '_util',
      'getOr',
      'after',
      'ary',
      'assignInWith',
      'assignIn',
      'assignWith',
      'assign',
      'at',
      'attempt',
      'before',
      'bindAll',
      'bindKey',
      'bind',
      'camelCase',
      'capitalize',
      'castArray',
      'chain',
      'chunk',
      'cloneDeepWith',
      'cloneDeep',
      'cloneWith',
      'clone',
      'compact',
      'concat',
      'cond',
      'conformsTo',
      'conforms',
      'constant',
      'countBy',
      'create',
      'curryRight',
      'curry',
      'debounce',
      'deburr',
      'defaultTo',
      'defaultsDeep',
      'defaults',
      'defer',
      'delay',
      'differenceWith',
      'difference',
      'differencyBy',
      'dropRightWhile',
      'dropRight',
      'dropWhile',
      'drop',
      'endsWith',
      'escapeRegExp',
      'escape',
      'every',
      'fill',
      'filter',
      'findIndex',
      'findKey',
      'findLastIndex',
      'findLastKey',
      'findLast',
      'find',
      'flatMapDeep',
      'flatMapDepth',
      'flatMap',
      'flattenDeep',
      'flattenDepth',
      'flatten',
      'flip',
      'flowRight',
      'flow',
      'forEachRight',
      'forEach',
      'forInRight',
      'forIn',
      'forOwnRight',
      'forOwn',
      'fromPairs',
      'functionsIn',
      'functions',
      'get',
      'groupBy',
      'hasIn',
      'has',
      'head',
      'identity',
      'includes',
      'indexOf',
      'initial',
      'intersectionBy',
      'intersectionWith',
      'intersection',
      'invertBy',
      'invert',
      'invokeMap',
      'invoke',
      'iteratee',
      'join',
      'kebabCase',
      'keyBy',
      'keysIn',
      'keys',
      'lastIndexOf',
      'last',
      'lowerCase',
      'lowerFirst',
      'mapKeys',
      'mapValues',
      'map',
      'matchesProperty',
      'matches',
      'memoize',
      'mergeWith',
      'merge',
      'methodOf',
      'method',
      'mixin',
      'negate',
      'noConflict',
      'noop',
      'nthArg',
      'nth',
      'omitBy',
      'omit',
      'once',
      'orderBy',
      'overArgs',
      'overEvery',
      'overSome',
      'over',
      'padEnd',
      'padStart',
      'pad',
      'parseInt',
      'partialRight',
      'partial',
      'partition',
      'pickBy',
      'pick',
      'propertyOf',
      'property',
      'pullAllBy',
      'pullAllWith',
      'pullAll',
      'pullAt',
      'pull',
      'rangeRight',
      'range',
      'rearg',
      'reduceRight',
      'reduce',
      'reject',
      'remove',
      'repeat',
      'replace',
      'rest',
      'result',
      'reverse',
      'runInContext',
      'sampleSize',
      'sample',
      'setWith',
      'set',
      'shuffle',
      'size',
      'slice',
      'snakeCase',
      'some',
      'sortBy',
      'sortedIndexBy',
      'sortedIndexOf',
      'sortedIndex',
      'sortedLastIndexBy',
      'sortedLastIndexOf',
      'sortedLastIndex',
      'sortedUniqBy',
      'sortedUniq',
      'split',
      'spread',
      'startCase',
      'startsWith',
      'stubArray',
      'stubFalse',
      'stubObject',
      'stubString',
      'stubTrue',
      'tail',
      'takeRightWhile',
      'takeRight',
      'takeWhile',
      'take',
      'tap',
      'template',
      'throttle',
      'thru',
      'times',
      'toLower',
      'toPairsIn',
      'toPairs',
      'toPath',
      'toUpper',
      'transform',
      'trimEnd',
      'trimStart',
      'trim',
      'truncate',
      'unary',
      'unescape',
      'unionBy',
      'union',
      'uniqBy',
      'uniqWith',
      'uniq',
      'uniqueId',
      'unset',
      'unzipWith',
      'unzip',
      'updateWith',
      'update',
      'upperCase',
      'upperFirst',
      'valuesIn',
      'values',
      'without',
      'words',
      'wrap',
      'xorBy',
      'xorWith',
      'xor',
      'zipObjectDeep',
      'zipObject',
      'zipWith',
      'zip',
    ],
  }
}
